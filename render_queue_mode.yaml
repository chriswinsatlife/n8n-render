# FINAL CORRECTED render.yaml - v4 (with indentation fixed)

services:
  # 1. Your existing n8n Web Service
  - type: web
    name: n8n
    env: docker
    repo: https://github.com/chriswinsatlife/n8n-render
    branch: main
    dockerfilePath: ./Dockerfile
    healthCheckPath: /healthz
    envVars:
      - fromGroup: n8n-shared-credentials
      - fromDatabase:
          name: n8n-database
          property: connectionString
        destEnvVar: DATABASE_URL
      - fromService:
          type: redis
          name: n8n-redis
          property: connectionString
        destEnvVar: REDIS_URL
      - key: EXECUTIONS_MODE
        value: queue
      - key: WEBHOOK_URL
        value: https://n8n-naps.onrender.com
      - key: N8N_BINARY_DATA_MODE
        value: database
      - key: N8N_PORT
        value: 5678

  # 2. The NEW n8n Worker (as a Private Service)
  - type: pserv
    name: n8n-worker
    env: docker
    repo: https://github.com/chriswinsatlife/n8n-render
    branch: main
    dockerfilePath: ./Dockerfile
    startCommand: n8n worker --concurrency=10
    numInstances: 1
    envVars:
      - fromGroup: n8n-shared-credentials
      - fromDatabase:
          name: n8n-database
          property: connectionString
        destEnvVar: DATABASE_URL
      - fromService:
          type: redis
          name: n8n-redis
          property: connectionString
        destEnvVar: REDIS_URL
      - key: EXECUTIONS_MODE
        value: queue
      - key: N8N_BINARY_DATA_MODE
        value: database

# This section defines the services themselves
services:
  # 3. Redis Service
  - type: redis
    name: n8n-redis
    ipAllowList: []

# This section defines the database
databases:
  - name: n8n-database
    ipAllowList: []

# This section defines the group of shared secrets
envVarGroups:
  - name: n8n-shared-credentials
    envVars:
      - key: N8N_ENCRYPTION_KEY
        sync: false
